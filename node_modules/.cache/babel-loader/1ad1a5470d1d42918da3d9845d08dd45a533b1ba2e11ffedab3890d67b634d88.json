{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Documents/AS/summer-competition-dashboard/src/components/Tasks.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../services/taskService\";\nimport \"./Tasks.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskButton({\n  number,\n  description,\n  selected,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `task ${selected ? \"selected\" : \"\"}`,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            children: [/*#__PURE__*/_jsxDEV(\"title\", {\n              children: \"task-info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11 7V9H13V7H11M14 17V15H13V11H10V13H11V15H10V17H14M22 12C22 17.5 17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2C17.5 2 22 6.5 22 12M20 12C20 7.58 16.42 4 12 4C7.58 4 4 7.58 4 12C4 16.42 7.58 20 12 20C16.42 20 20 16.42 20 12Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskButton;\nfunction Modal({\n  task,\n  onClose\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-overlay-content\",\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Task Number: \", task.task_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Modal;\nexport default function Tasks() {\n  _s();\n  const [tasks, setTasks] = useState();\n  const [selectedTask, setSelectedTask] = useState();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        console.log(data);\n        setTasks(data);\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const onClick = task => {\n    if (task === selectedTask) {\n      setSelectedTask(undefined);\n    } else {\n      setSelectedTask(task);\n    }\n  };\n  const closeModal = () => {\n    setSelectedTask(undefined);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [tasks === null || tasks === void 0 ? void 0 : tasks.map(task => /*#__PURE__*/_jsxDEV(TaskButton, {\n      number: task.task_id,\n      name: task.task_name,\n      description: task.description,\n      restrictions: task.restrictions,\n      selected: selectedTask === task,\n      onClick: () => onClick(task)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), selectedTask !== undefined && /*#__PURE__*/_jsxDEV(Modal, {\n      task: selectedTask,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"hRxBICGJyZC/yRsP90tz1l6mBsM=\");\n_c3 = Tasks;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TaskButton\");\n$RefreshReg$(_c2, \"Modal\");\n$RefreshReg$(_c3, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","getTasks","jsxDEV","_jsxDEV","TaskButton","number","description","selected","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","viewBox","d","_c","Modal","task","onClose","e","stopPropagation","task_id","_c2","Tasks","_s","tasks","setTasks","selectedTask","setSelectedTask","fetchTasks","data","console","log","error","undefined","closeModal","map","name","task_name","restrictions","_c3","$RefreshReg$"],"sources":["/Users/anthony/Documents/AS/summer-competition-dashboard/src/components/Tasks.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getTasks } from \"../services/taskService\";\nimport { Task } from \"../types\";\nimport \"./Tasks.css\";\n\nfunction TaskButton({\n  number,\n  description,\n  selected,\n  onClick,\n}: {\n  number: number;\n  name: string;\n  description: string;\n  restrictions: string;\n  selected: boolean;\n  onClick: () => void;\n}) {\n  return (\n    <button className={`task ${selected ? \"selected\" : \"\"}`} onClick={onClick}>\n      <div className=\"task-container\">\n        <div className=\"task-content\">\n          <div className=\"task-description\">{description}</div>\n          <div className=\"info-button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n              <title>task-info</title>\n              <path d=\"M11 7V9H13V7H11M14 17V15H13V11H10V13H11V15H10V17H14M22 12C22 17.5 17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2C17.5 2 22 6.5 22 12M20 12C20 7.58 16.42 4 12 4C7.58 4 4 7.58 4 12C4 16.42 7.58 20 12 20C16.42 20 20 16.42 20 12Z\" />\n            </svg>\n          </div>\n        </div>\n      </div>\n    </button>\n  );\n}\n\nfunction Modal({ task, onClose }: { task: Task; onClose: () => void }) {\n  return (\n    <div className=\"task-overlay\" onClick={onClose}>\n      <div\n        className=\"task-overlay-content\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <p>Task Number: {task.task_id}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default function Tasks() {\n  const [tasks, setTasks] = useState<Task[]>();\n  const [selectedTask, setSelectedTask] = useState<Task>();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        console.log(data);\n        setTasks(data);\n      } catch (error) {\n        console.error('Failed to fetch tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const onClick = (task: Task) => {\n    if (task === selectedTask) {\n      setSelectedTask(undefined);\n    } else {\n      setSelectedTask(task);\n    }\n  };\n\n  const closeModal = () => {\n    setSelectedTask(undefined);\n  };\n\n  return (\n    <div className=\"task-list\">\n\n      {tasks?.map((task: Task) => (\n        <TaskButton\n          number={task.task_id}\n          name={task.task_name}\n          description={task.description}\n          restrictions={task.restrictions}\n          selected={selectedTask === task}\n          onClick={() => onClick(task)}\n        />\n      ))}\n      {selectedTask !== undefined && <Modal task={selectedTask} onClose={closeModal} />}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}